{"version":3,"sources":["webpack://stocks_app/./js/modules/chartChange.js","webpack://stocks_app/./js/modules/config.js","webpack://stocks_app/./js/modules/modal.js","webpack://stocks_app/./js/modules/render.js","webpack://stocks_app/./js/modules/utilites.js","webpack://stocks_app/webpack/bootstrap","webpack://stocks_app/webpack/runtime/define property getters","webpack://stocks_app/webpack/runtime/hasOwnProperty shorthand","webpack://stocks_app/webpack/runtime/make namespace object","webpack://stocks_app/./js/script.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sBAAsB,sKAAsK;AACnM;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,C;;;;;;;;;;;;;;AClFO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,E;;;;;;;;;;;;;;;;;ACjDO;AACP;AACA;AACO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA,0FAA0F,QAAQ;AAClG;AACA;AACA;;AAEO,gBAAgB,oDAAoD,E;AAC3E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL,C;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA,kDAAkD,2CAA2C;AAC7F,mEAAmE,cAAc;AACjF,2GAA2G,UAAU,iBAAiB,MAAM,6CAA6C,qCAAqC;AAC9N,qGAAqG,UAAU,iBAAiB,MAAM,6CAA6C,2BAA2B;AAC9M,uGAAuG,UAAU,iBAAiB,MAAM,+CAA+C,2BAA2B;AAClN;AACA;AACA;AACA;AACA;AACA,kGAAkG,UAAU,mBAAmB,MAAM;AACrI;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA,0B;AACA,2F;AACA,iB;AACA,kB;AACA,K;AACA,iB;AACA,iB;AACA,K;AACA,a;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,aAAa;AACtE,yDAAyD,aAAa;AACtE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD,wCAAwC,YAAY;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;UC1FA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;ACNgI;AAChF;AACiB;AACrB;AACoB;;AAEhE,4DAA4D,sDAAM;AAClE,wDAAK,EAAE,iIAAiI;AACxI,oEAAW,EAAE,2KAA2K,2DAAS,kBAAkB,gEAAc,mBAAmB,2DAAW,cAAc,2DAAS,eAAe,yDAAU,kCAAkC,yDAAU,gCAAgC;;AAE3X;AACA,wHAAwH,QAAQ;AAChI;AACA;AACA;AACA;AACA,+DAAW;;AAEX;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,6DAAU;AACd,kGAAkG,+DAAS;AAC3G,QAAQ,kEAAS,kEAAkE,qEAAe;AAClG;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,QAAQ,uEAAiB;AACzB,KAAK;AACL,CAAC","file":"bundle.js","sourcesContent":["export function editChart(chart, type, value, dataSetIndex, rowIndex){\r\n    if (type === 'label') {\r\n        chart.data.datasets[dataSetIndex][type] = value;\r\n    }\r\n    else{\r\n        chart.data.datasets[dataSetIndex].data[rowIndex][type] = value;\r\n    }\r\n}\r\nexport function chartChange({chart, nameS, dateS, priceS, newDataTriggerS, saveTriggerS, parentS, sortFunction, colorFunction, renderFunction, validator, modalClose, modalS, clearModal, dataList}){\r\n    const name = document.querySelector(nameS),\r\n    date = document.querySelector(dateS),\r\n    price = document.querySelector(priceS),\r\n    newDataButton = document.querySelector(newDataTriggerS),\r\n    saveDataButton = document.querySelector(saveTriggerS),\r\n    parent = document.querySelector(parentS),\r\n    notification = document.querySelector('.notification');\r\n    \r\n    function addChart(chart, label, price, date) {\r\n        const newDataSet = {\r\n            label: label,\r\n            data: [{\r\n                x: date, \r\n                y: price\r\n            }],\r\n            borderColor: colorFunction(),\r\n            fill: false,\r\n            borderWidth: 3\r\n        }\r\n        chart.data.datasets.push(newDataSet);\r\n        chart.update();\r\n    };\r\n    \r\n    function updateChart(chart, price, date, index) {\r\n        const newDataSetItem = {\r\n            x : date,\r\n            y : price\r\n        };\r\n        chart.data.datasets[index].data.push(newDataSetItem);\r\n        chart.data.datasets[index].data.sort(sortFunction);\r\n        chart.update();\r\n    }\r\n    \r\n    function deleteChart(chart, dataSetIndex, dataSetItemIndex) {\r\n        chart.data.datasets[dataSetIndex].data.splice(dataSetItemIndex, 1);\r\n        chart.data.datasets[dataSetIndex].data.sort(sortFunction);\r\n    }\r\n\r\n    newDataButton.addEventListener('click', () => {\r\n        if (validator([name, date, price])){\r\n            let flag = false;\r\n            chart.data.datasets.forEach((element, index) => {\r\n                if (element.label === name.value) {\r\n                    flag = true;\r\n                    updateChart(chart, price.value, moment(date.value).format('DD/MM/YYYY'), index);\r\n                    renderFunction(chart, parent, deleteChart);\r\n                }\r\n            })\r\n            if (flag == false) {\r\n                addChart(chart, name.value, price.value, moment(date.value).format('DD/MM/YYYY'));\r\n                renderFunction(chart, parent, deleteChart);\r\n            }\r\n            if (chart.data.datasets.length > 0 && notification) {\r\n                notification.remove();\r\n            }\r\n            modalClose(document.querySelector(modalS));\r\n            clearModal(chart, dataList);\r\n            localStorage.setItem('dataSets', JSON.stringify(chart.data.datasets));\r\n        }\r\n    })\r\n\r\n    saveDataButton.addEventListener(('click'), () => {\r\n        localStorage.setItem('dataSets', JSON.stringify(chart.data.datasets));\r\n        chart.update();\r\n    });\r\n\r\n    document.querySelector('tbody').addEventListener('click', (e) => {\r\n    if (e.target.getAttribute('data-table_delete') === '') {\r\n        deleteChart(chart, +e.target.getAttribute('data-cellIndex'), +e.target.getAttribute('data-trashIndex'));\r\n        renderFunction(chart, document.querySelector('.table_body'));\r\n        chart.update();\r\n    }\r\n});\r\n}","export const config = {\r\n    type: 'line',\r\n    options: {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        aspectRatio: 0,\r\n        title: {\r\n            display: true,\r\n            text: \"Chart.js Time Scale\"\r\n        },\r\n        scales: {\r\n            x: {\r\n                type: \"time\",\r\n                time: {\r\n                    parser: 'DD/MM/YYYY',\r\n                    tooltipFormat: 'll',\r\n                    minUnit : 'day',\r\n                    displayFormats: {\r\n                        quarter: 'MMM YYYY'\r\n                    }\r\n                },\r\n                ticks: {\r\n                    align: 'center',\r\n                    crossAlign: 'center',\r\n                    padding: 10\r\n                }\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    align: 'center',\r\n                    crossAlign: 'center',\r\n                    padding: 10\r\n                },\r\n                beginAtZero: true\r\n            },\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    font: {\r\n                        size: 20\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    data: {\r\n        datasets: []\r\n    },\r\n};","export function modalOpen(modal){\r\n    modal.classList.toggle('show');\r\n}\r\nexport function modalClose(modal){\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n};\r\n\r\nexport function clearModal(chart, dataListS){\r\n    const dataList = document.querySelector(dataListS);\r\n    dataList.innerHTML = '';\r\n    [...new Set(chart.data.datasets)].forEach(e => dataList.innerHTML += `<option value=${e.label}>`);\r\n    document.querySelectorAll('.modal_input').forEach(e => e.value = '');\r\n    [...document.querySelectorAll('.invalid-feedback'), ...document.querySelectorAll('.valid-feedback')].forEach(e => e.remove());\r\n}\r\n\r\nexport function modal({chart, openTrigger, closeTrigger, modalS, dataListS}){ \r\n    const modal = document.querySelector(modalS);\r\n    document.querySelector(openTrigger).addEventListener('click', () => {\r\n        modalOpen(modal);\r\n    });\r\n    console.log(document.querySelectorAll(closeTrigger));\r\n    document.querySelectorAll(closeTrigger).forEach(e => e.addEventListener('click', () => {\r\n        modalClose(modal);\r\n    }));\r\n\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-modal_close') === \"\") {\r\n            modalClose(modal);\r\n            clearModal(chart, dataListS);\r\n        }\r\n    })\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Escape') {\r\n            modalClose(modal);\r\n        }\r\n    });\r\n}","function cellRender(chart, itemIndex){\r\n    let tableItemCell = '';\r\n    chart.data.datasets[itemIndex].data.forEach((element, index) => {\r\n            tableItemCell += `<tr style=\"color: ${chart.data.datasets[itemIndex].borderColor}\">\r\n            <td class=\"table_item center\" scope=\"row\" width=\"10\">${itemIndex + 1}</td>\r\n            <td class=\"table_item center\" width=\"30%\"><input class=\"center\" data-type=label data-dataset=${itemIndex} data-rowindex=${index} contenteditable=\"true\" type='text' value=\"${chart.data.datasets[itemIndex].label}\"></input></td>\r\n            <td class=\"table_item center\" width=30%><input class=\"center\" data-type=x data-dataset=${itemIndex} data-rowindex=${index} contenteditable=\"true\" type='date' value=\"${inputformatDate(element.x)}\"></input></td>\r\n            <td class=\"table_item center\" width=\"30%\"><input class=\"center\" data-type=y data-dataset=${itemIndex} data-rowindex=${index} contenteditable=\"true\" type='number' value=\"${inputformatDate(element.y)}\"></input></td>\r\n            <td class=\"table_item center\" width=\"7%\">\r\n                <div class=\"btn-group dropstart\">\r\n                    <i class=\"bi bi-three-dots-vertical dots\" type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    </i>\r\n                    <ul class=\"dropdown-menu\">\r\n                    <li><a class=\"dropdown-item\" href=\"#\"><i class=\"bi bi-trash\" data-cellIndex=${itemIndex} data-trashIndex=${index} data-table_delete></i></a></li>\r\n                    </ul>\r\n                </div>\r\n            </td>\r\n            </tr>`\r\n    });\r\n    return tableItemCell;\r\n}\r\n\r\nfunction tableRender(chart, parent){\r\n    chart.data.datasets = chart.data.datasets.filter(e => e.data.length>0);\r\n    parent.innerHTML = '';\r\n    chart.data.datasets.forEach((element, index) => {\r\n        parent.innerHTML += (cellRender(chart, index));\r\n    })\r\n}\r\n\r\nfunction inputformatDate(date){\r\n    return date.split('/').reverse().join('-')\r\n}\r\nfunction chartformatDate(date){\r\n    return date.split('-').reverse().join('/')\r\n}\r\nexport {cellRender, tableRender, chartformatDate}","function getRandomColor() {\r\n    var letters = '0123456789ABCDEF'.split('');\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++ ) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\nfunction chartSort(a, b) { \r\n    let fa = moment(a.x, 'DD/MM/YYYY').valueOf(), fb = moment(b.x, 'DD/MM/YYYY').valueOf(); \r\n    if(fa < fb) { \r\n        return -1; \r\n    } \r\n    if(fa > fb) { \r\n        return 1; \r\n    } \r\n    return 0; \r\n}\r\n\r\nfunction sortTableByColumn(table, column, asc = true) {\r\n    const dirModifier = asc ? 1 : -1;\r\n    const tBody = table.tBodies[0];\r\n    const rows = Array.from(tBody.querySelectorAll(\"tr\"));\r\n    const sortedRows = rows.sort((a, b) => {\r\n        const aColText = a.querySelector(`td:nth-child(${ column + 1 })`).textContent.trim() + a.querySelector('input').value.trim();\r\n        const bColText = b.querySelector(`td:nth-child(${ column + 1 })`).textContent.trim() + b.querySelector('input').value.trim();\r\n        return aColText > bColText ? (1 * dirModifier) : (-1 * dirModifier);\r\n    });\r\n    while (tBody.firstChild) {\r\n        tBody.removeChild(tBody.firstChild);\r\n    }\r\n    tBody.append(...sortedRows);\r\n    table.querySelectorAll(\"th\").forEach(th => th.classList.remove(\"th-sort-asc\", \"th-sort-desc\"));\r\n    table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle(\"th-sort-asc\", asc);\r\n    table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle(\"th-sort-desc\", !asc);\r\n}\r\n\r\nfunction validator(dataArray){\r\n    function createNotification(type, message){\r\n        const notification = document.createElement('div');\r\n        notification.innerHTML = message;\r\n        if (type) {\r\n            notification.classList.add(\"valid-feedback\");\r\n        }\r\n        if (!type) {\r\n            notification.classList.add(\"invalid-feedback\");\r\n        }\r\n        return notification;\r\n    }\r\n\r\n    let status = true;\r\n    dataArray.forEach(e => {\r\n        switch (e.getAttribute('data-type')) {\r\n            case 'label':\r\n                if (e.value.trim().length < 1) {\r\n                    e.after(createNotification(false, `Please, enter a valid name`));\r\n                    status = false;\r\n                }else{\r\n                    e.after(createNotification(true, `Looks good!`));\r\n                }\r\n                break;\r\n            case 'x':\r\n                if (moment(chartformatDate(e.value), 'DD/MM/YY').isValid()) {\r\n                    e.after(createNotification(true, `Looks good!`));\r\n                }else{\r\n                    e.after(createNotification(false, `Please, enter a valid date`));\r\n                    status = false;\r\n                }\r\n                break;\r\n            case 'y':\r\n                if (e.value < 0.1 || e.value > 10000) {\r\n                    e.after(createNotification(false, `Please, enter a valid price`));\r\n                    status = false;\r\n                }else{\r\n                    e.after(createNotification(true, `Looks good!`));\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n    return status;\r\n}\r\n\r\nfunction chartformatDate(date){\r\n    return date.split('-').reverse().join('/')\r\n}\r\nfunction inputformatDate(date){\r\n    return date.split('/').reverse().join('-')\r\n}\r\n\r\nexport {getRandomColor, chartSort, validator, chartformatDate, inputformatDate, sortTableByColumn};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {getRandomColor, chartSort, validator, chartformatDate, inputformatDate, sortTableByColumn} from './modules/utilites.js';\r\nimport {tableRender} from './modules/render.js';\r\nimport {modal, clearModal, modalClose} from './modules/modal.js';\r\nimport  {config} from './modules/config.js';\r\nimport {chartChange, editChart} from './modules/chartChange.js';\r\n\r\nconst chart = new Chart(document.getElementById('myChart'), config);\r\nmodal({chart : chart, openTrigger: '.header_btn', closeTrigger: '[data-modal_close]', modalS : '.modal', dataListS : '#datalistOptions'});\r\nchartChange({chart: chart, nameS : '#name', dateS : '#date', priceS : '#price', newDataTriggerS : '[data-modal_new]', saveTriggerS : '.editing_btn', parentS : '#table', sortFunction : chartSort, colorFunction : getRandomColor, renderFunction : tableRender, validator : validator, modalClose : modalClose, modalS : '.modal', clearModal : clearModal, dataList : '#datalistOptions'});\r\n\r\nchart.data.datasets = JSON.parse(localStorage.getItem('dataSets')) || chart.data.datasets ;\r\n[...new Set(chart.data.datasets)].forEach(e => document.querySelector('#datalistOptions').innerHTML += `<option value=${e.label}>`)\r\nif (chart.data.datasets.length === 0) {\r\n    document.querySelector('.main_table').innerHTML += '<div class=\"notification\">There is currently no data in the table</div>'\r\n}\r\nchart.update();\r\ntableRender(chart, document.querySelector('.table_body'));\r\n\r\ndocument.querySelector('.editing_btn').addEventListener(('click'), () => {\r\n    localStorage.setItem('dataSets', JSON.stringify(chart.data.datasets));\r\n    chart.update();\r\n});\r\ndocument.querySelector('#table').addEventListener('input', (e) => {\r\n    clearModal(chart, '#datalistOptions');\r\n    if ((e.target.getAttribute('contenteditable') === 'true' || e.target.nodeName === 'INPUT') && validator([e.target])) {\r\n        editChart(chart, e.target.getAttribute('data-type'), e.target.innerHTML || chartformatDate(e.target.value), +e.target.getAttribute('data-dataset'), +e.target.getAttribute('data-rowindex'));\r\n    }\r\n});\r\n\r\ndocument.querySelectorAll(\".cell-sortable\").forEach(headerCell => {\r\n    headerCell.addEventListener(\"click\", () => {\r\n        const tableElement = document.querySelector('#table');\r\n        const headerIndex = Array.prototype.indexOf.call(headerCell.parentElement.children, headerCell);\r\n        const currentIsAscending = headerCell.classList.contains(\"th-sort-asc\");\r\n        sortTableByColumn(tableElement, headerIndex, !currentIsAscending);\r\n    });\r\n});\r\n"],"sourceRoot":""}